<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Jeremy Robards — Full-Stack Web Developer & Certified AI Engineer</title>
    <meta name="description" content="Portfolio of Jeremy Robards — Certified Prompt Engineer & Full-Stack Web Developer. Projects: ChronicleOS, KAIA, more." />
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = { darkMode: 'class' };
      // Persist theme
      (function () {
        const stored = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const isDark = stored ? stored === 'dark' : prefersDark;
        document.documentElement.classList.toggle('dark', isDark);
      })();
    </script>
  </head>
  <body class="bg-white dark:bg-gray-900 text-gray-900 dark:text-white">
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>
        try {
          // Year
          const yearEl = document.getElementById('year'); if (yearEl) yearEl.textContent = new Date().getFullYear();

          // Theme toggle
          const toggle = document.getElementById('theme-toggle');
          if (toggle) {
            toggle.addEventListener('click', () => {
              const html = document.documentElement;
              const dark = !html.classList.contains('dark');
              html.classList.toggle('dark', dark);
              localStorage.setItem('theme', dark ? 'dark' : 'light');
              const label = document.getElementById('themeLabel');
              if (label) label.textContent = dark ? 'Light' : 'Dark';
            });
          } else {
            console.warn('Theme toggle button not found (expected id="theme-toggle").');
          }

          const themeLabelEl = document.getElementById('themeLabel');
          if (themeLabelEl) themeLabelEl.textContent = document.documentElement.classList.contains('dark') ? 'Light' : 'Dark';

          // Blog loader
          const blogGrid = document.getElementById('blogGrid');
          const modal = document.getElementById('blogModal');
          const modalBody = document.getElementById('modalBody');
          const modalTitle = document.getElementById('modalTitle');
          const closeModal = () => { if (modal) { modal.classList.add('hidden'); modal.setAttribute('aria-hidden','true'); } };
          const modalCloseEl = document.getElementById('modalClose'); if (modalCloseEl) modalCloseEl.addEventListener('click', closeModal);
          const blogBackdropEl = document.getElementById('blogBackdrop'); if (blogBackdropEl) blogBackdropEl.addEventListener('click', closeModal);
          window.addEventListener('keydown', e => { if (e.key === 'Escape') closeModal(); });

          async function loadBlog(){
            // Prefer the in-browser DB; fall back to /blog/posts.json seed
            try{
              const dbModule = await import('/blog/assets/db.js');
              const posts = await dbModule.getAllPosts();
              if(posts && posts.length>0){
                const visible = posts.filter(p=>p.status==='published' && !p.deleted).sort((a,b)=>new Date(b.date)-new Date(a.date));
                renderBlogCards(visible.slice(0,3));
                return;
              }
            }catch(e){ console.warn('Blog DB load failed', e); }
            try{
              const res = await fetch('/blog/posts.json',{cache:'no-store'}); if(res.ok){ const seed = await res.json(); renderBlogCards((seed||[]).slice(0,3)); return; }
            }catch(e){ console.warn('Fetching blog/posts.json failed', e); }
            // placeholder when no posts
            renderBlogCards([]);
          }

          function renderBlogCards(posts){
            if(!blogGrid) return;
            blogGrid.innerHTML = '';
            if(!posts || posts.length===0){
              const empty = document.createElement('div'); empty.className='rounded-2xl border border-dashed p-6 text-center text-sm bg-white/60 dark:bg-black/20';
              empty.innerHTML = `<p class="font-semibold">No posts yet</p><p class="mt-2 text-sm">Check back later or unlock developer tools to add the first post.</p>`;
              blogGrid.appendChild(empty); return;
            }
            posts.forEach(p=>{
              const card = document.createElement('article');
              card.className = 'rounded-2xl border border-slate-200 dark:border-slate-800 p-4 card-hover cursor-pointer bg-white/60 dark:bg-black/20 backdrop-blur-sm';
              card.innerHTML = `
                <div class="text-xs text-slate-600 dark:text-slate-400">${new Date(p.date).toLocaleString()}</div>
                <h3 class="mt-1 font-semibold">${p.title}</h3>
                <p class="mt-1 text-sm text-slate-700 dark:text-slate-300">${p.excerpt || (p.subtitle||'')}</p>
              `;
              card.addEventListener('click', async ()=>{
                // load full content from DB if available
                try{ const db = await import('/blog/assets/db.js'); const full = await db.getPost(p.id); if(modalTitle) modalTitle.textContent = full.title; if(modalBody) modalBody.innerHTML = full.content || full.contentHtml || '<p>No content.</p>'; if(modal) { modal.classList.remove('hidden'); modal.setAttribute('aria-hidden','false'); } }catch(e){ if(modalTitle) modalTitle.textContent = p.title; if(modalBody) modalBody.innerHTML = p.contentHtml || '<p>No content.</p>'; if(modal) { modal.classList.remove('hidden'); modal.setAttribute('aria-hidden','false'); } }
              });
              blogGrid.appendChild(card);
            });
          }

          loadBlog();
        } catch (err) {
          console.error('Main page script error', err);
        }
      </script>
    <div class="grid md:grid-cols-2 gap-8 items-center">
      <div>
        <h1 class="text-3xl sm:text-5xl font-extrabold tracking-tight">
          Full-Stack Web Developer & Certified AI Engineer
        </h1>
        <p class="mt-4 text-lg text-slate-700 dark:text-slate-300">
          I architect and deliver AI-driven solutions that don’t just work, they outperform expectations. As a Certified AI Engineer and Full-Stack Web Developer, I build scalable, future-ready applications that turn complex problems into elegant, profitable solutions.

          Where others offer code, I deliver measurable outcomes: faster performance, smarter automation, and experiences designed to convert. My approach blends cutting-edge AI engineering with clean, maintainable web development, giving clients a competitive edge and users an unforgettable experience.

          If you’re looking for someone who can prototype fast, iterate intelligently, and ship production-grade solutions that stand out, you’ve just found your partner.

        </p>
        <div class="mt-6 flex flex-wrap gap-3">
          <a href="#proof" class="rounded-xl bg-[var(--leaf)] text-white px-5 py-2.5 text-sm font-semibold card-hover">See Projects</a>
          <a href="#contact" class="rounded-xl border border-[var(--leaf)] text-[var(--leaf)] px-5 py-2.5 text-sm font-semibold card-hover dark:border-white/30 dark:text-white">Hire Me</a>
        </div>
      </div>
      <div class="relative z-10">
        <div class="aspect-[16/10] rounded-2xl border border-slate-200/70 dark:border-slate-800/70 overflow-hidden bg-white/50 dark:bg-black/30 backdrop-blur-sm">
          <!-- start with no src to avoid immediate 404s; JS will set the working URL -->
          <img
            id="heroGif"
            src=""
            alt="Development preview animation"
            loading="lazy"
            class="w-full h-full object-cover"
          />
        </div>
      </div>
    </div>
  </section>

  <!-- Proof: Project Cards -->
  <section id="proof" class="max-w-6xl mx-auto px-4 py-8">
    <h2 class="text-2xl sm:text-3xl font-bold tracking-tight">Project Proof</h2>
    <p class="mt-2 text-slate-700 dark:text-slate-300">Three core deliverables demonstrating capability and execution.</p>

    <div class="mt-6 grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
      <!-- ChronicleOS -->
      <a href="https://www.chronicleos.com" class="block rounded-2xl border border-slate-200 dark:border-slate-800 overflow-hidden card-hover bg-white/70 dark:bg-black/30 backdrop-blur-sm" target="_blank" rel="noopener">
        <div class="aspect-[16/10]">
          <!-- DEV NOTE: Replace with a short animated loop when ready -->
    <img src="/chronicleos.png"
      alt="ChronicleOS preview" class="w-full h-full object-cover">
        </div>
        <div class="p-4">
          <h3 class="font-semibold">ChronicleOS</h3>
          <p class="mt-1 text-sm text-slate-700 dark:text-slate-300">
            Web-first platform for interactive branching narratives. Cartridge-style content, mobile-first delivery.
          </p>
        </div>
      </a>

      <!-- KAIA -->
      <a href="https://www.digiartifact.com/kaia" class="block rounded-2xl border border-slate-200 dark:border-slate-800 overflow-hidden card-hover bg-white/70 dark:bg-black/30 backdrop-blur-sm" target="_blank" rel="noopener">
        <div class="aspect-[16/10]">
          <!-- DEV NOTE: Replace with a short animated loop when ready -->
          <img src="https://images.unsplash.com/photo-1518779578993-ec3579fee39f?q=80&w=1200&auto=format&fit=crop"
               alt="KAIA preview" class="w-full h-full object-cover">
        </div>
        <div class="p-4">
          <h3 class="font-semibold">Keep At It, Always (KAIA)</h3>
          <p class="mt-1 text-sm text-slate-700 dark:text-slate-300">
            Productivity Sherpa & AI copilot designed for neurodivergent creators. Prompts, routines, and automation.
          </p>
        </div>
      </a>

      <!-- Coming Soon -->
      <div class="rounded-2xl border border-dashed border-[var(--koi-700)]/40 p-4 bg-white/60 dark:bg-black/20 backdrop-blur-sm flex flex-col">
        <div class="aspect-[16/10] rounded-xl bg-gradient-to-br from-[var(--koi)]/25 to-[var(--leaf)]/20 grid place-items-center">
          <span class="text-[var(--koi-700)]">Coming Soon</span>
        </div>
        <div class="p-2">
          <h3 class="font-semibold mt-2">Project 3 — Coming Soon</h3>
          <p class="mt-1 text-sm text-slate-700 dark:text-slate-300">Reserved for the next shipped build.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Blog (JSON-fed, modal reader) -->
  <section id="blog" class="max-w-6xl mx-auto px-4 py-10">
    <h2 class="text-2xl sm:text-3xl font-bold tracking-tight">Latest Posts</h2>
    <p class="mt-2 text-slate-700 dark:text-slate-300">Three posts load from <code>/blog.json</code>. Click to read in-page.</p>
  <div id="blogGrid" class="mt-6 grid sm:grid-cols-2 lg:grid-cols-3 gap-6"></div>

    <!-- Modal -->
    <div id="blogModal" class="fixed inset-0 z-50 hidden" aria-hidden="true">
      <div class="absolute inset-0 bg-black/50 backdrop-blur-sm" id="blogBackdrop"></div>
      <div class="relative max-w-3xl mx-auto mt-16 bg-white/95 dark:bg-[color:rgba(6,42,42,0.95)] border border-slate-200 dark:border-slate-800 rounded-2xl shadow-xl">
        <div class="flex items-center justify-between p-4 border-b border-slate-200 dark:border-slate-800">
          <h3 id="modalTitle" class="font-semibold"></h3>
          <button id="modalClose" class="rounded-lg px-2 py-1 text-slate-500 hover:text-slate-900 dark:hover:text-white" aria-label="Close">✕</button>
        </div>
        <div id="modalBody" class="prose prose-slate dark:prose-invert max-w-none p-4"></div>
      </div>
    </div>
  </section>

  <!-- About -->
  <section id="about" class="max-w-6xl mx-auto px-4 py-10">
    <h2 class="text-2xl sm:text-3xl font-bold tracking-tight">About</h2>
    <div class="mt-4 grid md:grid-cols-3 gap-6">
      <div class="md:col-span-2 space-y-3 bg-white/60 dark:bg-black/20 border border-slate-200/60 dark:border-slate-800/60 rounded-2xl p-5 backdrop-blur-sm">
        <p>
  Jeremy Robards is a <strong>Certified AI Engineer</strong> and <strong>Full-Stack Web Developer</strong>.  
  He doesn't just write code he designs and deliver intelligent, scalable solutions that save time, cut costs, and create measurable impact.
</p>

<p>
  His specialty is turning complex problems into elegant, high-performance applications that ship fast and scale with ease.  
  <p>
    From AI-powered automation and data workflows to full-stack web systems, his work is
    <!-- use a site-root path; JS will probe and navigate or fall back -->
    <a id="secret713" href="/713/index.html" class="inline-flex items-center rounded-xl bg-[var(--leaf)] text-white px-3 py-1.5 text-sm font-semibold card-hover" aria-label="Secret link 713">
      secret link — 713
    </a>
    built to outperform competitors and stand up to real-world demands.
  </p>
</p>

<p>
  Focus areas: AI-driven product design, LLM prompt architecture, structured outputs, automation pipelines, Tailwind/JS/React front-ends, and MVP-to-production delivery.
</p>

      </div>
      <ul class="space-y-2 text-sm bg-white/60 dark:bg-black/20 border border-slate-200/60 dark:border-slate-800/60 rounded-2xl p-5 backdrop-blur-sm">
        <li><span class="font-semibold">Core:</span> Prompt Eng, HTML, CSS/Tailwind, JavaScript</li>
        <li><span class="font-semibold">Working:</span> React, Python scripting, SQLite</li>
        <li><span class="font-semibold">Creative:</span> Interactive narratives, ARG design, video/music integration</li>
      </ul>
    </div>
  </section>

  <!-- Roadmap -->
  <section id="roadmap" class="max-w-6xl mx-auto px-4 py-10">
    <h2 class="text-2xl sm:text-3xl font-bold tracking-tight">Project Roadmap</h2>
    <div class="mt-6 grid md:grid-cols-2 gap-6">
      <div class="rounded-2xl border border-slate-200 dark:border-slate-800 p-5 bg-white/60 dark:bg-black/20 backdrop-blur-sm">
        <h3 class="font-semibold text-[var(--leaf)]">Q4 — Ship & Prove</h3>
        <ul class="mt-3 list-disc pl-5 space-y-2 text-sm">
          <li>ChronicleOS: playable cartridge demo + docs</li>
          <li>KAIA: daily routine flows + landing page</li>
          <li>Blog: hook up JSON → SQLite backed posts</li>
        </ul>
      </div>
      <div class="rounded-2xl border border-slate-200 dark:border-slate-800 p-5 bg-white/60 dark:bg-black/20 backdrop-blur-sm">
        <h3 class="font-semibold text-[var(--koi-700)]">Q1 — Scale & Polish</h3>
        <ul class="mt-3 list-disc pl-5 space-y-2 text-sm">
          <li>ChronicleOS Store prototype</li>
          <li>Agentic workflows (prompt packs, templates)</li>
          <li>Public portfolio case studies</li>
        </ul>
      </div>
    </div>
  </section>

  <!-- Links -->
  <section id="links" class="max-w-6xl mx-auto px-4 py-10">
    <h2 class="text-2xl sm:text-3xl font-bold tracking-tight">All Project Links</h2>
    <div class="mt-4 grid sm:grid-cols-2 lg:grid-cols-3 gap-4 text-sm">
      <a class="rounded-xl border border-slate-200 dark:border-slate-800 px-4 py-3 card-hover bg-white/60 dark:bg-black/20 backdrop-blur-sm" href="https://www.chronicleos.com" target="_blank" rel="noopener">ChronicleOS</a>
      <a class="rounded-xl border border-slate-200 dark:border-slate-800 px-4 py-3 card-hover bg-white/60 dark:bg-black/20 backdrop-blur-sm" href="https://www.digiartifact.com/kaia" target="_blank" rel="noopener">KAIA</a>
      <a class="rounded-xl border border-slate-200 dark:border-slate-800 px-4 py-3 card-hover bg-white/60 dark:bg-black/20 backdrop-blur-sm" href="https://www.jeremyrobards.com" target="_blank" rel="noopener">jeremyrobards.com</a>
      <a class="rounded-xl border border-slate-200 dark:border-slate-800 px-4 py-3 card-hover bg-white/60 dark:bg-black/20 backdrop-blur-sm" href="https://www.digiartifact.com" target="_blank" rel="noopener">digiartifact.com</a>
      <a class="rounded-xl border border-slate-200 dark:border-slate-800 px-4 py-3 card-hover bg-white/60 dark:bg-black/20 backdrop-blur-sm" href="https://www.p3epro.com" target="_blank" rel="noopener">p3epro.com</a>
      <a class="rounded-xl border border-slate-200 dark:border-slate-800 px-4 py-3 card-hover bg-white/60 dark:bg-black/20 backdrop-blur-sm" href="mailto:contact@chronicleos.com" target="_blank" rel="noopener">Email: contact@chronicleos.com</a>
    </div>
  </section>

  <!-- Contact -->
  <section id="contact" class="max-w-6xl mx-auto px-4 py-10">
    <h2 class="text-2xl sm:text-3xl font-bold tracking-tight">Contact</h2>
    <p class="mt-2 text-slate-700 dark:text-slate-300 text-sm">
      Prefer email? <a class="underline text-[var(--leaf)] hover:text-[var(--leaf-600)]" href="mailto:contact@chronicleos.com">contact@chronicleos.com</a>
    </p>
    <form class="mt-6 grid gap-4 max-w-xl" onsubmit="event.preventDefault(); alert('Thanks — I’ll get back to you shortly.');">
      <input required type="text" placeholder="Your name" class="w-full rounded-xl border border-slate-300 dark:border-slate-700 bg-white/60 dark:bg-white/5 px-4 py-3 backdrop-blur-sm">
      <input required type="email" placeholder="Your email" class="w-full rounded-xl border border-slate-300 dark:border-slate-700 bg-white/60 dark:bg-white/5 px-4 py-3 backdrop-blur-sm">
      <textarea required rows="5" placeholder="What would you like to build?" class="w-full rounded-xl border border-slate-300 dark:border-slate-700 bg-white/60 dark:bg-white/5 px-4 py-3 backdrop-blur-sm"></textarea>
      <button class="justify-self-start rounded-xl bg-[var(--koi)] text-white px-5 py-2.5 text-sm font-semibold card-hover hover:bg-[var(--koi-700)]">Send</button>
    </form>
  </section>

  <!-- Footer -->
  <footer class="border-t border-slate-200 dark:border-slate-800 bg-white/60 dark:bg-black/20 backdrop-blur-sm">
    <div class="max-w-6xl mx-auto px-4 py-6 text-xs text-slate-700 dark:text-slate-300">
      © <span id="year"></span> Jeremy Robards. Certified Prompt Engineer.
    </div>
  </footer>

  <script>
    // Year
    document.getElementById('year').textContent = new Date().getFullYear();

    // Theme toggle
    const toggle = document.getElementById('theme-toggle');
    if (toggle) {
      toggle.addEventListener('click', () => {
        const html = document.documentElement;
        const dark = !html.classList.contains('dark');
        html.classList.toggle('dark', dark);
        localStorage.setItem('theme', dark ? 'dark' : 'light');
        const label = document.getElementById('themeLabel');
        if (label) label.textContent = dark ? 'Light' : 'Dark';
      });
    } else {
      console.warn('Theme toggle button not found (expected id="theme-toggle").');
    }
    const themeLabelEl = document.getElementById('themeLabel');
    if (themeLabelEl) themeLabelEl.textContent = document.documentElement.classList.contains('dark') ? 'Light' : 'Dark';

    // Blog loader
    const blogGrid = document.getElementById('blogGrid');
    const modal = document.getElementById('blogModal');
    const modalBody = document.getElementById('modalBody');
    const modalTitle = document.getElementById('modalTitle');
    const closeModal = () => { modal.classList.add('hidden'); modal.setAttribute('aria-hidden','true'); };
    document.getElementById('modalClose').addEventListener('click', closeModal);
    document.getElementById('blogBackdrop').addEventListener('click', closeModal);
    window.addEventListener('keydown', e => { if (e.key === 'Escape') closeModal(); });

    async function loadBlog(){
      // Prefer the in-browser DB; fall back to /blog/posts.json seed
      try{
        const dbModule = await import('/blog/assets/db.js');
        const posts = await dbModule.getAllPosts();
        if(posts && posts.length>0){
          const visible = posts.filter(p=>p.status==='published' && !p.deleted).sort((a,b)=>new Date(b.date)-new Date(a.date));
          renderBlogCards(visible.slice(0,3));
          return;
        }
      }catch(e){ /* ignore */ }
      try{
        const res = await fetch('/blog/posts.json',{cache:'no-store'}); if(res.ok){ const seed = await res.json(); renderBlogCards((seed||[]).slice(0,3)); return; }
      }catch(e){}
      // placeholder when no posts
      renderBlogCards([]);
    }

    function renderBlogCards(posts){
      blogGrid.innerHTML = '';
      if(!posts || posts.length===0){
        const empty = document.createElement('div'); empty.className='rounded-2xl border border-dashed p-6 text-center text-sm bg-white/60 dark:bg-black/20';
        empty.innerHTML = `<p class="font-semibold">No posts yet</p><p class="mt-2 text-sm">Check back later or unlock developer tools to add the first post.</p>`;
        blogGrid.appendChild(empty); return;
      }
      posts.forEach(p=>{
        const card = document.createElement('article');
        card.className = 'rounded-2xl border border-slate-200 dark:border-slate-800 p-4 card-hover cursor-pointer bg-white/60 dark:bg-black/20 backdrop-blur-sm';
        card.innerHTML = `
          <div class="text-xs text-slate-600 dark:text-slate-400">${new Date(p.date).toLocaleString()}</div>
          <h3 class="mt-1 font-semibold">${p.title}</h3>
          <p class="mt-1 text-sm text-slate-700 dark:text-slate-300">${p.excerpt || (p.subtitle||'')}</p>
        `;
        card.addEventListener('click', async ()=>{
          // load full content from DB if available
          try{ const db = await import('/blog/assets/db.js'); const full = await db.getPost(p.id); modalTitle.textContent = full.title; modalBody.innerHTML = full.content || full.contentHtml || '<p>No content.</p>'; modal.classList.remove('hidden'); modal.setAttribute('aria-hidden','false'); }catch(e){ modalTitle.textContent = p.title; modalBody.innerHTML = p.contentHtml || '<p>No content.</p>'; modal.classList.remove('hidden'); modal.setAttribute('aria-hidden','false'); }
        });
        blogGrid.appendChild(card);
      });
    }

    loadBlog();
  </script>

  <!-- Replace the diagnostic script with an improved asset probe + loader -->
  <script>
  (function(){
    // Try relative / public / src/assets first (works with Vite / Pages),
    // then fall back to raw.githubusercontent (main/master) with both possible paths and casings.
    const koiCandidates = [
      // root /public (GitHub Pages serves public files at site root)
      'koi.png',
      '/koi.png',
      'public/koi.png',
      '/public/koi.png',
      // source folder (in case you are serving raw files)
      'src/assets/koi.png',
      '/src/assets/koi.png',
      // raw.githubusercontent (branch variants)
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/main/public/koi.png',
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/master/public/koi.png',
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/main/src/assets/koi.png',
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/master/src/assets/koi.png'
    ];

    const gifCandidates = [
      // root / public
      'Dev1.gif', 'dev1.gif', '/Dev1.gif', '/dev1.gif',
      'public/Dev1.gif', 'public/dev1.gif', '/public/Dev1.gif', '/public/dev1.gif',
      // src assets
      'src/assets/Dev1.gif', 'src/assets/dev1.gif', '/src/assets/Dev1.gif', '/src/assets/dev1.gif',
      // raw GitHub (both branch names and both casings)
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/main/public/Dev1.gif',
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/main/public/dev1.gif',
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/master/public/Dev1.gif',
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/master/public/dev1.gif',
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/main/src/assets/Dev1.gif',
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/main/src/assets/dev1.gif',
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/master/src/assets/Dev1.gif',
      'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/master/src/assets/dev1.gif'
    ];

    function probe(url, timeout = 5000){
      return new Promise(resolve => {
        const img = new Image();
        let done = false;
        const onOk = () => { if (done) return; done = true; cleanup(); resolve({ ok: true, url }); };
        const onErr = () => { if (done) return; done = true; cleanup(); resolve({ ok: false, url }); };
        const cleanup = () => { img.onload = img.onerror = null; };
        img.onload = onOk;
        img.onerror = onErr;
        // give up if it takes too long
        const t = setTimeout(() => { if (done) return; done = true; cleanup(); resolve({ ok:false, url }); }, timeout);
        img.src = url;
      });
    }

    async function findFirst(candidates){
      for (const c of candidates){
        try {
          const r = await probe(c);
          if (r.ok) return c;
        } catch (e) { /* ignore */ }
      }
      return null;
    }

    async function initAssets(){
      console.log('Asset probe: probing koi and hero gif candidates...');
      const bgUrl = await findFirst(koiCandidates);
      if (bgUrl) {
        document.querySelector('.bg-fixed-layer').style.backgroundImage = `url('${bgUrl}')`;
        console.log('Asset probe: using background', bgUrl);
      } else {
        console.warn('Asset probe: koi.png not found. Check file presence and casing in repo/public/src. Falling back to /koi.png');
        const bgEl = document.querySelector('.bg-fixed-layer');
        if (bgEl) bgEl.style.backgroundImage = "url('/koi.png')";
      }

      const gifUrl = await findFirst(gifCandidates);
      const heroImg = document.getElementById('heroGif');
      if (gifUrl && heroImg) {
        heroImg.src = gifUrl;
        console.log('Asset probe: using hero GIF', gifUrl);
      } else {
        if (!gifUrl) console.warn('Asset probe: Dev1.gif not found from candidates. Falling back to /Dev1.gif');
        if (!heroImg) console.warn('Asset probe: hero img element not found.');
        if (heroImg && !gifUrl) heroImg.src = '/Dev1.gif';
      }
    }

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initAssets);
    } else {
      initAssets();
    }
  })();
  </script>

  <!-- debug helpers removed for production -->

  <!-- Add this small probe-and-navigate helper near the end of the file (keep after other scripts) -->
  <script>
  (function(){
    const a = document.getElementById('secret713');
    if (!a) return;

  // Fallback raw URL (update branch if necessary)
  const rawFallback = 'https://raw.githubusercontent.com/TheSeeker713/www.jeremyrobards.com/main/public/713/index.html';

    async function exists(url){
      try {
        // try a HEAD request first (faster/no body)
        const res = await fetch(url, { method: 'HEAD', cache: 'no-store' });
        return res.ok;
      } catch (err) {
        // some environments (file://) or CORS may block HEAD; try GET as fallback
        try {
          const r2 = await fetch(url, { method: 'GET', cache: 'no-store' });
          return r2.ok;
        } catch (e) {
          return false;
        }
      }
    }

    a.addEventListener('click', async (ev) => {
      ev.preventDefault();
      const href = a.getAttribute('href');

      // Try the explicit file href first (avoid SPA history fallback returning index.html)
      console.log('Secret link probe →', href);
      if (await exists(href)) { window.location.href = href; return; }

      // Try raw.githubusercontent fallback (opens in new tab)
      console.log('Trying raw fallback →', rawFallback);
      if (await exists(rawFallback)) {
        window.open(rawFallback, '_blank');
        return;
      }

      // Nothing found: inform the user non-intrusively (no blocking alert)
      console.warn('Secret page not available on the server yet (11.11.2025). Check deployment.');

      // transient toast notification (non-blocking)
      (function showSecretNotice(msg){
        try {
          const id = 'secretToastNotice';
          if (document.getElementById(id)) return;
          const el = document.createElement('div');
          el.id = id;
          el.textContent = msg;
          Object.assign(el.style, {
            position: 'fixed',
            right: '14px',
            bottom: '14px',
            zIndex: '9999',
            background: 'rgba(20,20,30,0.9)',
            color: 'white',
            padding: '12px 16px',
            borderRadius: '10px',
            boxShadow: '0 6px 18px rgba(2,6,23,.35)',
            fontSize: '13px',
            maxWidth: '320px',
            opacity: '0',
            transition: 'opacity .25s ease'
          });
          document.body.appendChild(el);
          // fade in
          requestAnimationFrame(() => { el.style.opacity = '1'; });
          // remove after delay
          setTimeout(() => { el.style.opacity = '0'; setTimeout(() => el.remove(), 300); }, 6000);
        } catch (e) { /* ignore */ }
      })("Sorry — the secret page is not available on the server yet. Check that your Pages deployment includes /713/ and try again.");
    });
  })();
  </script>
  <script>
    // Diagnostic helpers: confirm key elements exist and report/fix missing assets
    (function(){
      function log(...args){ try{ console.log('[diag]',...args); }catch(e){} }
      document.addEventListener('DOMContentLoaded', ()=>{
        const toggle = document.getElementById('theme-toggle');
        const label = document.getElementById('themeLabel');
        const hero = document.getElementById('heroGif');
        const bg = document.querySelector('.bg-fixed-layer');
        log('theme-toggle found?', !!toggle, 'themeLabel found?', !!label);
        log('document has .dark?', document.documentElement.classList.contains('dark'));
        if(label) log('themeLabel text:', label.textContent);
        log('heroImg element?', !!hero, 'hero src:', hero && hero.src);
        log('bg element?', !!bg, 'bgImage:', bg && bg.style && bg.style.backgroundImage);

        // If images still blank, set conservative fallbacks (makes visible quickly)
        if(hero && (!hero.src || hero.src.trim()==='')){ hero.src = '/Dev1.gif'; log('Applied fallback hero /Dev1.gif'); }
        if(bg && (!bg.style.backgroundImage || bg.style.backgroundImage.trim()==='none')){ bg.style.backgroundImage = "url('/koi.png')"; log('Applied fallback bg /koi.png'); }
      });
    })();
  </script>
</body>
</html>
